// automatically generated by Xtext
grammar xtext.datamodels.Datamodels with org.eclipse.xtext.common.Terminals

import "platform:/resource/datamodels/metamodels/datamodels.ecore" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

DataModel returns DataModel: {DataModel}
	'DataModel' name=EString
	':'
		(entities+=Entity ( "," entities+=Entity)*)?;


Property returns Property:
	AssociationEnd | Attribute;


EString returns ecore::EString:
	STRING | ID;

Entity returns Entity:
	{Entity}
	'entity' 
	name=EString
	('extends' superEntity=[Entity|EString])?
	'{'
		(properties+=Property ( "," properties+=Property)*)?
	'}';

AssociationEnd returns AssociationEnd:
	"association"
	multiplicity=Multiplicity
	'('targetEntity=[Entity|EString]')'
	name=EString
	'oppositeTo'
	otherEnd=[AssociationEnd|EString]
	'in'
	associationName=EString;

Attribute returns Attribute:
	"attribute"
	'('name=EString')'
	(isUnique?='unique')?
	type=DataType;

enum Multiplicity returns Multiplicity:
	MANY = 'Set' | ONE = 'Single';

enum DataType returns DataType:
	String = 'String' | Integer = 'Integer';