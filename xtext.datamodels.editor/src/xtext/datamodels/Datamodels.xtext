// automatically generated by Xtext
grammar xtext.datamodels.Datamodels with org.eclipse.xtext.common.Terminals

import "/final/metamodel/datamodels.ecore" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

DataModel returns DataModel: {DataModel}
	'DataModel' name=EString
	'{'
		(entities+=Entity ( "," entities+=Entity)*)?
	'}';


Property returns Property:
	AssociationEnd | Attribute;


EString returns ecore::EString:
	STRING | ID;

Entity returns Entity:
	{Entity}
	name=EString
	('<-' superEntity=[Entity|EString])?
	'('
		(properties+=Attribute ( "," properties+=Attribute)*)?
		(properties+=AssociationEnd ( "," properties+=AssociationEnd)*)?
	')';

AssociationEnd returns AssociationEnd:
	name=EString
	'-'
		'(' multiplicity=Multiplicity ')'
	'->'
		targetEntity=[Entity|EString]
		'[' associationName=EString
		otherEnd=[AssociationEnd|EString] ']';

Attribute returns Attribute:
	isUnique?='*'
	name=EString
	'('
		type=DataType
	')';

enum Multiplicity returns Multiplicity:
				MANY = '*' | ONE = '1';

enum DataType returns DataType:
				String = 'String' | Integer = 'Integer';