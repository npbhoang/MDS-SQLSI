// automatically generated by Xtext
grammar xtext.securitymodels.SecurityModel with org.eclipse.xtext.common.Terminals

import "platform:/resource/securitymodels/metamodels/securitymodels.ecore" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "platform:/resource/datamodels/metamodels/datamodels.ecore" as datamodels

SecurityModel returns SecurityModel: {SecurityModel}
	'name:' name=EString
	'roles:' (roles+=Role)+
	('rules:' (rules+=Rule)+)?;

Property returns datamodels::Property:
	AssociationEnd | Attribute;

EString returns ecore::EString:
	STRING | ID;

Rule returns Rule:
	name=EString
	':'
	action=Action
	'(' resources+=[datamodels::Property|EString] ( "," resources+=[datamodels::Property|EString])* ')' 
	'conditions'
	('{' auths+=Auth ( ",or" auths+=Auth)* '}' )?;

Role returns Role:
	name=EString '<-' entity=[datamodels::Entity|EString];

enum Action returns Action:
				READ = 'READ' | CREATE = 'CREATE' | UPDATE = 'UPDATE' | DELETE = 'DELETE';

Auth returns Auth:
	'{'
		'roles' '(' roles+=[Role|EString] ( "," roles+=[Role|EString])* ')' 
		'context:' textual=EString
		'ocl:' oclExp=EString
		'sql:' sqlStm=EString
	'}';

AssociationEnd returns datamodels::AssociationEnd:
	'AssociationEnd'
	name=EString
	'{'
		'multiplicity' multiplicity=Multiplicity
		'associationName' associationName=EString
		'otherEnd' otherEnd=[datamodels::AssociationEnd|EString]
		'targetEntity' targetEntity=[datamodels::Entity|EString]
	'}';

Attribute returns datamodels::Attribute:
	isUnique?='isUnique'
	'Attribute'
	name=EString
	'{'
		'type' type=DataType
	'}';

enum Multiplicity returns datamodels::Multiplicity:
				MANY = 'MANY' | ONE = 'ONE';

Entity returns datamodels::Entity:
	{datamodels::Entity}
	'Entity'
	name=EString
	'{'
		('superEntity' superEntity=[datamodels::Entity|EString])?
		('properties' '{' properties+=Property ( "," properties+=Property)* '}' )?
	'}';

enum DataType returns datamodels::DataType:
				String = 'String' | Integer = 'Integer';

EBoolean returns ecore::EBoolean:
	'true' | 'false';
