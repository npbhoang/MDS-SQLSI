DROP DATABASE IF EXISTS UNIVERSITY;
CREATE DATABASE UNIVERSITY;
USE UNIVERSITY;

DROP TABLE IF EXISTS Role;
CREATE TABLE Role(
	RoleID INT(11) PRIMARY KEY,
	name VARCHAR(200) UNIQUE
);
DROP TABLE IF EXISTS RegUser;
CREATE TABLE RegUser(
	RegUserID INT(11) PRIMARY KEY,
	name VARCHAR(200),
	email VARCHAR(200) UNIQUE
);
DROP TABLE IF EXISTS Student;
CREATE TABLE Student(
	StudentID INT(11) PRIMARY KEY,
	RegUserID INT(11) UNIQUE,
	FOREIGN KEY (RegUserID) REFERENCES RegUser(RegUserID),
	intake INT(11)
);
DROP TABLE IF EXISTS Lecturer;
CREATE TABLE Lecturer(
	LecturerID INT(11) PRIMARY KEY,
	RegUserID INT(11) UNIQUE,
	FOREIGN KEY (RegUserID) REFERENCES RegUser(RegUserID),
	salary INT(11)
);
DROP TABLE IF EXISTS Course;
CREATE TABLE Course(
	CourseID INT(11) PRIMARY KEY,
	name VARCHAR(200),
	year INT(11)
);
DROP TABLE IF EXISTS RegUserRole;
CREATE TABLE RegUserRole(
	role INT(11) UNIQUE,
	FOREIGN KEY (role) REFERENCES Role(RoleID),
	RegUserRole INT(11) UNIQUE,
	FOREIGN KEY (RegUserRole) REFERENCES RegUser(RegUserID)
);
DROP TABLE IF EXISTS Teaching;
CREATE TABLE Teaching(
	taught INT(11) UNIQUE,
	FOREIGN KEY (taught) REFERENCES Course(CourseID),
	lecturer INT(11) UNIQUE,
	FOREIGN KEY (lecturer) REFERENCES Lecturer(LecturerID)
);
DROP TABLE IF EXISTS Enrollment;
CREATE TABLE Enrollment(
	students INT(11) UNIQUE,
	FOREIGN KEY (students) REFERENCES Student(StudentID),
	enrolled INT(11) UNIQUE,
	FOREIGN KEY (enrolled) REFERENCES Course(CourseID)
);
